/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package notepad;

import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;

/**
 *
 * @author ALVES
 */
public class NotePads extends javax.swing.JFrame {

    String fileName;
    Clipboard clipboard = getToolkit().getSystemClipboard();

    /**
     * Creates new form NotePads
     */
    public NotePads() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selecionaArquivo = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        menuBar = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        novo = new javax.swing.JMenuItem();
        abrir = new javax.swing.JMenuItem();
        salvar = new javax.swing.JMenuItem();
        sair = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        copiar = new javax.swing.JMenuItem();
        cortar = new javax.swing.JMenuItem();
        colar = new javax.swing.JMenuItem();
        about = new javax.swing.JMenu();
        sobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        file.setText("File");

        novo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/new.png"))); // NOI18N
        novo.setText("New");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });
        file.add(novo);

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/open.png"))); // NOI18N
        abrir.setText("Open");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        file.add(abrir);

        salvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        salvar.setText("Save");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        file.add(salvar);

        sair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exit.png"))); // NOI18N
        sair.setText("Exit");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        file.add(sair);

        menuBar.add(file);

        edit.setText("Edit");

        copiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        copiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/copy.png"))); // NOI18N
        copiar.setText("Copy");
        copiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarActionPerformed(evt);
            }
        });
        edit.add(copiar);

        cortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        cortar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cut.png"))); // NOI18N
        cortar.setText("Cut");
        cortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cortarActionPerformed(evt);
            }
        });
        edit.add(cortar);

        colar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        colar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/paste.png"))); // NOI18N
        colar.setText("Paste");
        colar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colarActionPerformed(evt);
            }
        });
        edit.add(colar);

        menuBar.add(edit);

        about.setText("About");

        sobre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        sobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/about.png"))); // NOI18N
        sobre.setText("About");
        sobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sobreActionPerformed(evt);
            }
        });
        about.add(sobre);

        menuBar.add(about);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 501, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cortarActionPerformed
       String cutString = textArea.getSelectedText();
        StringSelection cutSelection = new StringSelection(cutString);
        clipboard.setContents(cutSelection, cutSelection);
        textArea.replaceRange("", textArea.getSelectionStart(), textArea.getSelectionEnd());
        
    }//GEN-LAST:event_cortarActionPerformed

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed
        textArea.setText(" ");
        setTitle(fileName);
    }//GEN-LAST:event_novoActionPerformed

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        int retorno = selecionaArquivo.showOpenDialog(this);
        String caminho = (selecionaArquivo.getSelectedFile().getAbsolutePath());
        if (retorno == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedReader arquivoLer = new BufferedReader(new FileReader(caminho));
                String linha = "";
                String texto = "";
                while (linha != null) {
                    linha = arquivoLer.readLine();
                    if (linha != null) {
                        texto += linha + "\n";
                    }
                }
                textArea.setText(texto);
            } catch (FileNotFoundException e) {
                textArea.setText("Arquivo não existe");
            } catch (IOException e) {
                textArea.setText("Houve algum problema ao ler o arquivo");
            }
        }
    }//GEN-LAST:event_abrirActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        int retorno = selecionaArquivo.showSaveDialog(this);
        String diretorio = (selecionaArquivo.getSelectedFile().getAbsolutePath());
        if (diretorio.equals("")) {
            if (retorno == JFileChooser.APPROVE_OPTION) {
                diretorio = (selecionaArquivo.getSelectedFile().getAbsolutePath());
                try {
                    BufferedWriter escritaArq = new BufferedWriter(new FileWriter(diretorio));
                    escritaArq.append(textArea.getText());
                    escritaArq.close();
                } catch (IOException e) {
                    textArea.setText("Não foi possível carregar ou criar o arquivo");
                }
            }
        } else {
            try {
                BufferedWriter arquivoEscrita = new BufferedWriter(new FileWriter(diretorio));
                arquivoEscrita.append(textArea.getText());
                arquivoEscrita.close();
            } catch (IOException e) {
                textArea.setText("Não foi possível carregar ou criar o arquivo");
            }
        }
    }//GEN-LAST:event_salvarActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
            System.exit(0);   
    }//GEN-LAST:event_sairActionPerformed

    private void copiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarActionPerformed
        String copiar = textArea.getSelectedText();
        StringSelection copySelection = new StringSelection(copiar);
        clipboard.setContents(copySelection, copySelection);
    }//GEN-LAST:event_copiarActionPerformed
                                             
    private void colarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colarActionPerformed
        try {
            Transferable colar = clipboard.getContents(NotePads.this);
            String sel = (String) colar.getTransferData(DataFlavor.stringFlavor);
            textArea.replaceRange(sel, textArea.getSelectionStart(), textArea.getSelectionEnd());
        } catch (Exception e) {
            System.out.println("Não há nada a ser colado");
        } 
    }//GEN-LAST:event_colarActionPerformed

    private void sobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sobreActionPerformed
        textArea.setText("Olá fique a vontade!! Este projeto foi feito com fins educacionais. Caso necessite de alguma ajuda contate um ser superior!!!\n"
                + "   ██░▀██████████████▀░██\n" +
"   █▌▒▒░████████████░▒▒▐█\n" +
"   █░▒▒▒░██████████░▒▒▒░█\n" +
"   ▌░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▐\n" +
"   ░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░\n" +
"███▀▀▀██▄▒▒▒▒▒▒▒▄██▀▀▀██\n" +
"██░░░▐█░▀█▒▒▒▒▒█▀░█▌░░░█\n" +
"▐▌░░░▐▄▌░▐▌▒▒▒▐▌░▐▄▌░░▐▌\n" +
"   █░░░▐█▌░░▌▒▒▒▐░░▐█▌░░█\n" +
"   ▒▀▄▄▄█▄▄▄▌░▄░▐▄▄▄█▄▄▀▒\n" +
"   ░░░░░░░░░░└┴┘░░░░░░░░░\n" +
"   ██▄▄░░░░░░░░░░░░░░▄▄██\n" +
"   ████████▒▒▒▒▒▒████████\n" +
"   █▀░░███▒▒░░▒░░▒▀██████\n" +
"   █▒░███▒▒╖░░╥░░╓▒▐█████\n" +
"   █▒░▀▀▀░░║░░║░░║░░█████\n" +
"   ██▄▄▄▄▀▀┴┴╚╧╧╝╧╧╝┴┴███\n" +
"   ██████████████████████");
    }//GEN-LAST:event_sobreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NotePads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NotePads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NotePads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NotePads.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NotePads().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu about;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenuItem colar;
    private javax.swing.JMenuItem copiar;
    private javax.swing.JMenuItem cortar;
    private javax.swing.JMenu edit;
    private javax.swing.JMenu file;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem novo;
    private javax.swing.JMenuItem sair;
    private javax.swing.JMenuItem salvar;
    private javax.swing.JFileChooser selecionaArquivo;
    private javax.swing.JMenuItem sobre;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
